# ============================================
# Application Configuration
# ============================================
APP_ENV=development
APP_HOST=0.0.0.0
APP_PORT=8080
RUST_LOG=debug

# ============================================
# Database Configuration (PostgreSQL)
# ============================================
POSTGRES_DB=nova_auth
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/nova_auth
DATABASE_MAX_CONNECTIONS=20

# ============================================
# Redis Configuration
# ============================================
REDIS_PASSWORD=redis123
REDIS_PORT=6379
REDIS_URL=redis://:redis123@localhost:6379/0
REDIS_POOL_SIZE=10

# ============================================
# JWT Configuration
# ============================================
# User-service issues RS256 tokens using these keys (PEM content)
# Messaging-service validates tokens using JWT_PUBLIC_KEY_PEM
# IMPORTANT: Set proper keys in non-dev environments
JWT_PRIVATE_KEY_PEM=
JWT_PUBLIC_KEY_PEM=
JWT_ACCESS_TOKEN_TTL=900           # 15 minutes (in seconds)
JWT_REFRESH_TOKEN_TTL=604800       # 7 days (in seconds)
JWT_SECRET=dev_secret_change_in_production_32chars_minimum_length  # legacy config still required by user-service config loader

# ============================================
# Email Configuration (SMTP)
# ============================================
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM=noreply@nova.dev

# For production (example with Gmail):
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM=noreply@yourdomain.com

# ============================================
# Rate Limiting Configuration
# ============================================
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_SECS=60

# ============================================
# Service Ports (for docker-compose)
# ============================================
USER_SERVICE_PORT=8080
MESSAGING_SERVICE_PORT=3000
SEARCH_SERVICE_PORT=8086
API_GATEWAY_PORT=3000

# ============================================
# ClickHouse (analytics)
# ============================================
CLICKHOUSE_URL=http://localhost:8123
CLICKHOUSE_DB=nova_feed
CLICKHOUSE_USER=default
CLICKHOUSE_PASSWORD=clickhouse

# ============================================
# Neo4j (Graph DB)
# ============================================
NEO4J_ENABLED=false
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=neo4j

# ============================================
# OAuth Token Encryption
# ============================================
# IMPORTANT: Generate a 256-bit (32-byte) base64-encoded key for token encryption
# You can generate one with: openssl rand 32 | base64
# For production, use AWS KMS or HashiCorp Vault instead of environment variables
OAUTH_TOKEN_ENCRYPTION_KEY=

# ============================================
# OAuth Providers Configuration
# ============================================
# Google OAuth 2.0
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:3000/auth/callback/google

# Apple Sign in with Apple
APPLE_CLIENT_ID=
APPLE_TEAM_ID=
APPLE_KEY_ID=
APPLE_KEY_PATH=./apple_key.p8
APPLE_REDIRECT_URI=http://localhost:3000/auth/callback/apple

# Facebook Graph API
FACEBOOK_CLIENT_ID=
FACEBOOK_CLIENT_SECRET=
FACEBOOK_REDIRECT_URI=http://localhost:3000/auth/callback/facebook

# ============================================
# Messaging Service Configuration
# ============================================
# WebSocket development mode (bypasses membership checks)
WS_DEV_ALLOW_ALL=true

# Server-side encryption key (32-byte base64-encoded)
# Generate with: openssl rand 32 | base64
SECRETBOX_KEY_B64=dGVzdGluZy10ZXN0aW5nLXRlc3RpbmctdGVzdGluZy10ZXN0aW5nMDA=

# WebRTC ICE/TURN configuration returned to clients
# Comma-separated list of STUN/TURN URLs (include transport query params where needed)
RTC_STUN_URLS=stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302
RTC_TURN_URLS=turn:127.0.0.1:3478?transport=udp,turn:127.0.0.1:3478?transport=tcp
RTC_TURN_USERNAME=novauser
RTC_TURN_PASSWORD=nova-pass
RTC_ICE_TTL_SECONDS=3600

# ============================================
# Search Service Configuration
# ============================================
# Search service uses DATABASE_URL and REDIS_URL from above

# ============================================
# Kafka Configuration (CDC & Events)
# ============================================
KAFKA_BROKERS=kafka:9092
DEBEZIUM_CONNECT_URL=http://debezium:8083
ENABLE_CDC=false

# ============================================
# Feature Flags
# ============================================
RUN_MIGRATIONS=true
ENABLE_CDC=false
NEO4J_ENABLED=false
MILVUS_ENABLED=false
RECOMMENDATION_V2_INIT=false
RECOMMENDATION_V2_ENABLED=false

# Dev feature: auto-verify emails (skip email link flow)
DEV_AUTO_VERIFY_EMAIL=true

# ============================================
# Milvus (Vector DB) Configuration
# ============================================
MILVUS_URL=http://milvus:9091
MILVUS_COLLECTION=video_embeddings

# ============================================
# Logging Configuration
# ============================================
RUST_LOG=debug
RUST_BACKTRACE=1

# ============================================
# S3 / CloudFront (File Storage for Videos)
# ============================================
# AWS S3 bucket for video uploads
# IMPORTANT: Create bucket in staging first: aws s3api create-bucket --bucket nova-staging-videos --region ap-northeast-1 --create-bucket-configuration LocationConstraint=ap-northeast-1
S3_BUCKET_NAME=nova-staging-videos
S3_REGION=ap-northeast-1

# AWS Credentials for sonic-shih IAM user (get from AWS console)
# These credentials should have AmazonS3FullAccess permission
AWS_ACCESS_KEY_ID=AKIA_YOUR_ACCESS_KEY_ID_HERE
AWS_SECRET_ACCESS_KEY=your_secret_access_key_here

# Presigned URL expiry time (in seconds, default 15 minutes = 900)
S3_PRESIGNED_URL_EXPIRY_SECS=900

# CloudFront distribution URL (for serving videos, optional)
# If using CloudFront, set to your distribution domain (e.g., https://d123456.cloudfront.net)
# If not using CloudFront, set to API Gateway URL
CLOUDFRONT_URL=http://localhost:3000

# ============================================
# Push Notifications (Stubbed for Development)
# ============================================
# FCM (Firebase Cloud Messaging)
FCM_PROJECT_ID=nova-dev
FCM_SERVICE_ACCOUNT_JSON_BASE64=

# APNs (Apple Push Notification Service)
APNS_CERTIFICATE_PATH=/app/certs/apns_cert.p12
APNS_KEY_PATH=/app/certs/apns_key.p8
APNS_CERTIFICATE_PASSPHRASE=
APNS_TEAM_ID=DEVTEAMID
APNS_KEY_ID=DEVKEYID
APNS_BUNDLE_ID=com.example.nova
APNS_IS_PRODUCTION=false
