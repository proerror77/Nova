version: 0.2

# AWS CodeBuild 构建规范
# 构建所有 8 个 Nova 微服务并推送到 ECR

env:
  variables:
    AWS_REGION: ap-northeast-1
    AWS_ACCOUNT_ID: "025434362120"
    ECR_REGISTRY_ALIAS: nova
    DOCKER_BUILDKIT: "1"
  parameter-store:
    DOCKER_USERNAME: /codebuild/docker/username
    DOCKER_PASSWORD: /codebuild/docker/password

phases:
  pre_build:
    commands:
      - echo "=== 构建阶段开始 $(date) ==="
      - echo "AWS 账户: $AWS_ACCOUNT_ID"
      - echo "AWS 区域: $AWS_REGION"

      # 登录到 ECR
      - echo "🔐 登录到 Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # 创建 ECR 仓库（如果不存在）
      - echo "📦 确保 ECR 仓库存在..."
      - |
        for service in auth-service user-service content-service feed-service media-service messaging-service search-service streaming-service; do
          aws ecr describe-repositories --repository-names "$ECR_REGISTRY_ALIAS/$service" --region $AWS_REGION 2>/dev/null || \
          aws ecr create-repository --repository-name "$ECR_REGISTRY_ALIAS/$service" --region $AWS_REGION
        done

      # 设置 Docker Buildx
      - echo "🔨 设置 Docker Buildx..."
      - docker buildx create --use --name multiarch-builder || docker buildx use multiarch-builder

  build:
    commands:
      - echo "🚀 开始构建所有服务..."
      - |
        SERVICES=(
          "auth-service"
          "user-service"
          "content-service"
          "feed-service"
          "media-service"
          "messaging-service"
          "search-service"
          "streaming-service"
        )

        ECR_REGISTRY="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
        BUILD_FAILED=0

        for service in "${SERVICES[@]}"; do
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📦 构建 $service..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          IMAGE_TAG="$ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$service:latest"

          if docker buildx build \
            --platform linux/amd64 \
            --push \
            --progress=plain \
            -f "$service/Dockerfile" \
            -t "$IMAGE_TAG" \
            ./backend; then
            echo "✅ $service 构建成功"
          else
            echo "❌ $service 构建失败"
            BUILD_FAILED=1
          fi
        done

        exit $BUILD_FAILED

  post_build:
    commands:
      - echo ""
      - echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      - echo "📊 构建完成总结"
      - echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      - |
        echo "列出所有 ECR 镜像："
        aws ecr describe-images \
          --repository-name nova/auth-service \
          --region $AWS_REGION \
          --query 'imageDetails[*].[imageTag,imageSizeInBytes,imagePushedAt]' \
          --output table || echo "查询镜像列表"
      - echo "✨ 所有服务已成功推送到 ECR"
      - echo "完成时间: $(date '+%Y-%m-%d %H:%M:%S')"

# 缓存配置
cache:
  paths:
    - '/root/.cargo/**/*'
    - '/root/.docker/**/*'

# 不需要输出制品
artifacts:
  files:
    - buildspec.yml
  discard-paths: yes
