openapi: 3.0.0
info:
  title: Streaming Infrastructure API
  version: 1.0.0
  description: Management and delivery APIs for video live streaming
  contact:
    name: Streaming Team

servers:
  - url: http://localhost:8080
    description: Development
  - url: https://streaming.example.com
    description: Production

paths:
  /hls/{streamId}/index.m3u8:
    get:
      summary: Get HLS master playlist
      operationId: getHlsMasterPlaylist
      tags:
        - Delivery - HLS
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: HLS master playlist
          content:
            application/vnd.apple.mpegurl:
              schema:
                type: string
                example: |
                  #EXTM3U
                  #EXT-X-STREAM-INF:BANDWIDTH=2000000,RESOLUTION=720x480
                  720p/index.m3u8
                  #EXT-X-STREAM-INF:BANDWIDTH=5000000,RESOLUTION=1280x720
                  1080p/index.m3u8
        '404':
          description: Stream not found or not active
        '410':
          description: Stream has ended

  /hls/{streamId}/{quality}/index.m3u8:
    get:
      summary: Get HLS quality playlist
      operationId: getHlsQualityPlaylist
      tags:
        - Delivery - HLS
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: quality
          in: path
          required: true
          schema:
            type: string
            enum: [480p, 720p, 1080p]
      responses:
        '200':
          description: HLS quality variant playlist
          content:
            application/vnd.apple.mpegurl:
              schema:
                type: string
                example: |
                  #EXTM3U
                  #EXT-X-TARGETDURATION:2
                  #EXTINF:2.0,
                  segment-0001.ts
                  #EXTINF:2.0,
                  segment-0002.ts
        '404':
          description: Stream or quality not found

  /hls/{streamId}/{quality}/segment-{segmentId}.ts:
    get:
      summary: Get HLS video segment
      operationId: getHlsSegment
      tags:
        - Delivery - HLS
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: quality
          in: path
          required: true
          schema:
            type: string
        - name: segmentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Video segment (MPEG-TS)
          content:
            video/mp2t:
              schema:
                type: string
                format: binary
        '404':
          description: Segment not found (may have expired)

  /dash/{streamId}/manifest.mpd:
    get:
      summary: Get DASH manifest
      operationId: getDashManifest
      tags:
        - Delivery - DASH
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: DASH Media Presentation Description
          content:
            application/dash+xml:
              schema:
                type: string
        '404':
          description: Stream not found

  /dash/{streamId}/{quality}/segment-{segmentId}.m4s:
    get:
      summary: Get DASH video segment
      operationId: getDashSegment
      tags:
        - Delivery - DASH
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: quality
          in: path
          required: true
          schema:
            type: string
        - name: segmentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: DASH segment (MP4)
          content:
            video/mp4:
              schema:
                type: string
                format: binary

  /ws/stream/{streamId}:
    get:
      summary: WebSocket connection for real-time stream metrics and notifications
      operationId: connectWebSocket
      tags:
        - Real-Time
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '101':
          description: Switching to WebSocket protocol

  /streams:
    post:
      summary: Start a new broadcast stream
      operationId: startStream
      tags:
        - Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                streamKeyId:
                  type: string
                  format: uuid
                  description: Valid streaming key for authentication
                title:
                  type: string
                  description: Broadcast title
                description:
                  type: string
                  description: Broadcast description
                tags:
                  type: array
                  items:
                    type: string
              required:
                - streamKeyId
      responses:
        '201':
          description: Stream started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
        '400':
          description: Invalid stream key or parameters
        '401':
          description: Unauthorized

  /streams/{streamId}:
    get:
      summary: Get stream status and metadata
      operationId: getStreamStatus
      tags:
        - Management
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Stream details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
        '404':
          description: Stream not found

    delete:
      summary: Stop an active broadcast stream
      operationId: stopStream
      tags:
        - Management
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Stream stopped successfully
        '404':
          description: Stream not found
        '400':
          description: Cannot stop a stream that already ended

  /metrics/{streamId}:
    get:
      summary: Get stream analytics and metrics
      operationId: getStreamMetrics
      tags:
        - Analytics
      parameters:
        - name: streamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            description: Start of time range (default: last 1 hour)
        - name: until
          in: query
          schema:
            type: string
            format: date-time
            description: End of time range (default: now)
      responses:
        '200':
          description: Stream metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetrics'
        '404':
          description: Stream not found

components:
  schemas:
    Stream:
      type: object
      properties:
        streamId:
          type: string
          format: uuid
        broadccasterId:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING_INGEST, ACTIVE, ENDED_GRACEFULLY, ERROR]
        createdAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        duration:
          type: integer
          description: Duration in seconds
        concurrentViewers:
          type: integer
        totalViewers:
          type: integer
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string

    StreamMetrics:
      type: object
      properties:
        streamId:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        concurrentViewers:
          type: integer
        ingressBitrateMbps:
          type: number
        egressBitrateMbps:
          type: number
        qualityDistribution:
          type: object
          properties:
            480p:
              type: number
            720p:
              type: number
            1080p:
              type: number
        droppedFrames:
          type: integer
        bufferingEvents:
          type: integer
        avgBufferTimeMs:
          type: number

    WebSocketMessage:
      type: object
      description: Real-time message via WebSocket
      oneOf:
        - $ref: '#/components/schemas/MetricsUpdate'
        - $ref: '#/components/schemas/StreamStatusChange'
        - $ref: '#/components/schemas/ViewerEvent'

    MetricsUpdate:
      type: object
      properties:
        type:
          type: string
          enum: [metrics]
        data:
          $ref: '#/components/schemas/StreamMetrics'

    StreamStatusChange:
      type: object
      properties:
        type:
          type: string
          enum: [stream_status]
        status:
          type: string
          enum: [PENDING_INGEST, ACTIVE, ENDED_GRACEFULLY, ERROR]
        reason:
          type: string
          description: Reason for status change

    ViewerEvent:
      type: object
      properties:
        type:
          type: string
          enum: [viewer_joined, viewer_left, quality_changed]
        viewerCount:
          type: integer
        qualityDistribution:
          type: object

  securitySchemes:
    StreamKey:
      type: apiKey
      in: header
      name: X-Stream-Key
      description: Streaming key for authentication
