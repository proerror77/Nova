name: CI

on:
  push:
    branches: [main, develop, feature/**]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and Test - All Services
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nova_auth
        ports:
          - 55432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:55432/nova_auth
      REDIS_URL: redis://localhost:6379/0
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install cargo-nextest (fast test runner)
        uses: taiki-e/install-action@nextest

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: backend
          cache-on-failure: true

      - name: Wait for services
        run: |
          echo "Waiting for PostgreSQL..."
          for i in {1..30}; do
            pg_isready -h localhost -p 55432 -U postgres && break
            sleep 1
          done
          echo "Waiting for Redis..."
          for i in {1..30}; do
            redis-cli -h localhost ping && break
            sleep 1
          done

      # Code quality checks - fail fast
      - name: Check code formatting
        working-directory: backend
        run: cargo fmt --all -- --check

      - name: Run Clippy (strict mode)
        working-directory: backend
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      # Build all services
      - name: Build all services (debug)
        working-directory: backend
        run: cargo build --workspace --all-targets

      # Run tests for all services
      - name: Run tests (all services)
        working-directory: backend
        run: cargo nextest run --workspace --all-features

      # Run doc tests separately (nextest doesn't support them)
      - name: Run doc tests
        working-directory: backend
        run: cargo test --workspace --doc

      # Integration tests
      - name: Run integration tests
        working-directory: backend
        run: |
          cargo test --workspace --test '*' -- --nocapture --test-threads=1
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:55432/nova_auth
          REDIS_URL: redis://localhost:6379/0
