name: Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build release binary
      working-directory: backend
      run: cargo build --release --verbose

    - name: Create Release Notes
      id: release_notes
      run: |
        CHANGELOG=$(git log ${{ github.event.before }}..HEAD --pretty=format:"- %h %s" | head -20)
        echo "notes<<EOF" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: ${{ steps.release_notes.outputs.notes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/target/release/nova_user_service
        asset_name: nova_user_service-${{ steps.version.outputs.version }}
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Publish to crates.io
      working-directory: backend
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
      run: cargo publish
      continue-on-error: true
