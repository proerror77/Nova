name: Deploy

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_run:
    workflows: ["Build & Push Docker"]
    types: [completed]
    branches: [main, master]

jobs:
  deploy:
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    environment: production
    permissions:
      contents: read
      packages: read
      pull-requests: write
      issues: write
    # Only deploy when upstream Docker workflow succeeded, or when pushing a tag
    if: >-
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version
      id: version
      run: |
        if [[ ${{ github.ref }} == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(git rev-parse --short HEAD)
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "image=ghcr.io/${{ github.repository_owner }}/nova/nova-user-service:$VERSION" >> $GITHUB_OUTPUT

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify image exists in GHCR
      if: github.event_name == 'workflow_run' || startsWith(github.ref, 'refs/tags/v')
      run: |
        set -e
        echo "Checking manifest for $IMAGE"
        if ! docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
          echo "❌ Image not found: $IMAGE"
          exit 1
        fi
        echo "✅ Image manifest found: $IMAGE"

    - name: Deploy to production
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        IMAGE: ${{ steps.version.outputs.image }}
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
        
        # Deploy logic - customize based on your deployment target
        ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST << EOF
          cd /app/nova
          docker pull $IMAGE
          docker-compose -f docker-compose.yml up -d nova-user-service
          echo "Deployed version: $VERSION"
        EOF
      continue-on-error: true

    - name: Find related pull request
      id: find_pr
      if: always()
      uses: peter-evans/find-pull-request@v3
      with:
        commit: ${{ github.sha }}

    - name: Comment on PR with deployment status
      if: always() && steps.find_pr.outputs.number
      uses: peter-evans/create-or-update-comment@v5
      with:
        issue-number: ${{ steps.find_pr.outputs.number }}
        body: |
          🚀 Deployment ${{ job.status }}
          
          - Version: `${{ steps.version.outputs.version }}`
          - Image: `${{ steps.version.outputs.image }}`
          - Ref: `${{ github.ref }}`
