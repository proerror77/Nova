name: Simple ECR Build & Push

# 最小化 workflow - 仅 workflow_dispatch 触发
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/**
    paths:
      - 'backend/**'
      - '.github/workflows/simple-ecr-build.yml'

env:
  AWS_REGION: ap-northeast-1
  REGISTRY: 025434362120.dkr.ecr.ap-northeast-1.amazonaws.com
  REGISTRY_ALIAS: nova

jobs:
  build:
    name: Build & Push to ECR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        service:
          - auth-service
          - user-service
          - content-service
          - feed-service
          - media-service
          - messaging-service
          - search-service
          - streaming-service
      max-parallel: 1  # 逐个构建以避免并发问题

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::025434362120:role/github-actions-role
          source-account-id: '025434362120'
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
          role-session-name: gha-simple-ecr-${{ github.run_id }}
          role-skip-session-tagging: true

      - name: Verify AWS access
        run: |
          echo "Testing AWS credentials..."
          aws sts get-caller-identity
          echo "✅ AWS credentials OK"

      - name: Login to ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ env.REGISTRY }}
          echo "✅ ECR login OK"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.service }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.service }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_ALIAS }}/${{ matrix.service }}:buildcache,mode=max

      - name: Verify image pushed
        run: |
          echo "✅ ${{ matrix.service }} pushed to ECR"
          aws ecr describe-images \
            --repository-name "${{ env.REGISTRY_ALIAS }}/${{ matrix.service }}" \
            --region ${{ env.AWS_REGION }} \
            --query 'imageDetails[-1].[imageTags,imageSizeInBytes,imagePushedAt]' \
            --output table || echo "Image verification pending..."

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Summary
        run: |
          echo "=========================================="
          echo "✅ All services built and pushed to ECR"
          echo "=========================================="
          echo ""
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Alias: ${{ env.REGISTRY_ALIAS }}"
          echo "Build: ${{ github.sha }}"
          echo ""
          echo "Services:"
          echo "  - auth-service:${{ github.sha }}"
          echo "  - user-service:${{ github.sha }}"
          echo "  - content-service:${{ github.sha }}"
          echo "  - feed-service:${{ github.sha }}"
          echo "  - media-service:${{ github.sha }}"
          echo "  - messaging-service:${{ github.sha }}"
          echo "  - search-service:${{ github.sha }}"
          echo "  - streaming-service:${{ github.sha }}"
          echo ""
          echo "Images are also tagged as 'latest'"
