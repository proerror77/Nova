version: '3.8'

services:
  # PostgreSQL - Source database for CDC
  postgres:
    image: postgres:15-alpine
    container_name: nova_test_postgres
    environment:
      POSTGRES_DB: nova_test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      # Enable logical replication for CDC
      POSTGRES_INITDB_ARGS: "-c wal_level=logical"
    ports:
      - "5433:5432"  # Avoid conflict with local PostgreSQL
    volumes:
      - ./tests/fixtures/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d nova_test"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: nova_test_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Kafka - Event streaming
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: nova_test_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9093"]
      interval: 10s
      timeout: 10s
      retries: 10

  # ClickHouse - Analytics database
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: nova_test_clickhouse
    ports:
      - "8124:8123"  # HTTP interface
      - "9001:9000"  # Native protocol
    environment:
      CLICKHOUSE_DB: nova_test
      CLICKHOUSE_USER: test
      CLICKHOUSE_PASSWORD: test
    volumes:
      - ./tests/fixtures/clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis - Caching layer
  redis:
    image: redis:7-alpine
    container_name: nova_test_redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Debezium Connect - CDC for PostgreSQL (optional, for full CDC testing)
  # Uncomment if you want to test CDC end-to-end
  # debezium:
  #   image: debezium/connect:2.4
  #   container_name: nova_test_debezium
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     postgres:
  #       condition: service_healthy
  #   ports:
  #     - "8084:8083"
  #   environment:
  #     BOOTSTRAP_SERVERS: kafka:9093
  #     GROUP_ID: 1
  #     CONFIG_STORAGE_TOPIC: debezium_configs
  #     OFFSET_STORAGE_TOPIC: debezium_offsets
  #     STATUS_STORAGE_TOPIC: debezium_statuses

networks:
  default:
    name: nova_test_network
