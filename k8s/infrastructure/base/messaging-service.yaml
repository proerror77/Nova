---
# Messaging Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-service
  namespace: nova
  labels:
    app: messaging-service
    version: v1
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: messaging-service
  template:
    metadata:
      labels:
        app: messaging-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: messaging-service
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000

      initContainers:
      # 等待数据库准备好
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done']

      containers:
      - name: messaging-service
        image: nova/messaging-service:${VERSION:-latest}
        imagePullPolicy: IfNotPresent

        # 端口定义
        ports:
        - name: http
          containerPort: 8084
          protocol: TCP
        - name: grpc
          containerPort: 9084
          protocol: TCP

        # 环境变量
        env:
        # 应用配置
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: nova-config
              key: APP_ENV
        - name: RUST_LOG
          valueFrom:
            configMapKeyRef:
              name: nova-config
              key: RUST_LOG

        # 数据库
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nova-db-credentials
              key: DATABASE_URL

        # Redis
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nova-redis-credentials
              key: REDIS_URL

        # Kafka
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: nova-config
              key: KAFKA_BROKERS

        # JWT
        - name: JWT_PUBLIC_KEY_PEM
          valueFrom:
            secretKeyRef:
              name: nova-jwt-keys
              key: JWT_PUBLIC_KEY_PEM

        # ClickHouse
        - name: CLICKHOUSE_URL
          valueFrom:
            configMapKeyRef:
              name: nova-config
              key: CLICKHOUSE_URL

        # Hostname
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

        # 资源限制
        resources:
          requests:
            cpu: 150m
            memory: 512Mi
          limits:
            cpu: 800m
            memory: 1Gi

        # 存活性探针
        livenessProbe:
          httpGet:
            path: /api/v1/health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        # 就绪性探针
        readinessProbe:
          httpGet:
            path: /api/v1/health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        # 启动探针（防止启动过程中被杀死）
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30

        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL

        # 卷挂载
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache

      # 卷定义
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}

      # 优雅关闭配置
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst

      # 亲和性配置
      affinity:
        # Pod 反亲和性：避免两个副本在同一节点
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - messaging-service
              topologyKey: kubernetes.io/hostname

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: messaging-service
  namespace: nova
  labels:
    app: messaging-service
spec:
  type: ClusterIP
  selector:
    app: messaging-service
  ports:
  - name: http
    port: 8084
    targetPort: 8084
    protocol: TCP
  - name: grpc
    port: 9084
    targetPort: 9084
    protocol: TCP
  sessionAffinity: None

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: messaging-service
  namespace: nova
  labels:
    app: messaging-service

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: messaging-service-hpa
  namespace: nova
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: messaging-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
