apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nova-gateway
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
      use epoll;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      # 日志格式 - 包含上游响应时间用于性能分析
      log_format api_log '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'rt=$request_time '
                         'uct=$upstream_connect_time '
                         'uht=$upstream_header_time '
                         'urt=$upstream_response_time';

      access_log /var/log/nginx/access.log api_log;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      client_max_body_size 100M;

      # 负载均衡 - 上游服务定义
      upstream user_service {
        least_conn;
        # 在 Kubernetes 中，服务名可作为 DNS 名
        server user-service.nova-services.svc.cluster.local:8080 weight=10;
        keepalive 32;
      }

      upstream content_service {
        least_conn;
        # content-service 在分离时启用
        # server content-service.nova-services.svc.cluster.local:8080 weight=10;
        server user-service.nova-services.svc.cluster.local:8080 weight=10;  # 当前仍通过 user-service
        keepalive 32;
      }

      upstream media_service {
        least_conn;
        # media-service 在分离时启用
        # server media-service.nova-services.svc.cluster.local:8080 weight=10;
        server user-service.nova-services.svc.cluster.local:8080 weight=10;  # 当前仍通过 user-service
        keepalive 32;
      }

      # 速率限制配置
      limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
      limit_req_zone $http_x_user_id zone=user_limit:10m rate=50r/s;

      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # 健康检查端点 - 用于 Kubernetes liveness/readiness probe
        location /health {
          return 200 '{"status":"ok"}\n';
          add_header Content-Type 'application/json';
          access_log off;
        }

        # ============================================
        # User Service Endpoints (/api/v1/users/*, /api/v1/auth/*)
        # ============================================
        location ~ ^/api/v1/users/(.*)$ {
          proxy_pass http://user_service;
          proxy_http_version 1.1;

          # 请求头转发
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Port $server_port;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;

          # 连接复用
          proxy_set_header Connection "";

          # 超时设置
          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          # 缓存控制
          proxy_buffering on;
          proxy_buffer_size 4k;
          proxy_buffers 8 4k;

          # 限流
          limit_req zone=api_limit burst=200 nodelay;
        }

        location ~ ^/api/v1/auth/(.*)$ {
          proxy_pass http://user_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          # 认证端点可能较慢，允许更多突发
          limit_req zone=api_limit burst=50 nodelay;
        }

        # ============================================
        # Content Service Endpoints (/api/v1/posts/*, /api/v1/comments/*, /api/v1/stories/*)
        # Currently routed to user-service (same container)
        # Will be split to content-service in P1.2
        # ============================================
        location ~ ^/api/v1/posts/(.*)$ {
          proxy_pass http://content_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          limit_req zone=api_limit burst=200 nodelay;
        }

        location ~ ^/api/v1/comments/(.*)$ {
          proxy_pass http://content_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          limit_req zone=api_limit burst=200 nodelay;
        }

        location ~ ^/api/v1/stories/(.*)$ {
          proxy_pass http://content_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          limit_req zone=api_limit burst=200 nodelay;
        }

        # ============================================
        # Media Service Endpoints (/api/v1/videos/*, /api/v1/uploads/*, /api/v1/reels/*)
        # Currently routed to user-service (same container)
        # Will be split to media-service in P1.2
        # ============================================
        location ~ ^/api/v1/videos/(.*)$ {
          proxy_pass http://media_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 60s;  # 视频操作可能较慢
          proxy_read_timeout 60s;

          limit_req zone=api_limit burst=100 nodelay;
        }

        location ~ ^/api/v1/uploads/(.*)$ {
          proxy_pass http://media_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          # 上传操作需要更长的超时
          proxy_connect_timeout 10s;
          proxy_send_timeout 300s;
          proxy_read_timeout 300s;

          # 上传端点的限流更宽松
          limit_req zone=api_limit burst=50 nodelay;
        }

        location ~ ^/api/v1/reels/(.*)$ {
          proxy_pass http://media_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 60s;
          proxy_read_timeout 60s;

          limit_req zone=api_limit burst=100 nodelay;
        }

        # ============================================
        # Aggregation Endpoints (需要聚合多个服务)
        # /api/v1/feed/*, /api/v1/trending/*, /api/v1/discover/*
        # 保留在 user-service 中 (后续将使用 gRPC 调用其他服务)
        # ============================================
        location ~ ^/api/v1/feed/(.*)$ {
          proxy_pass http://user_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          # Feed 端点允许较高的并发
          limit_req zone=user_limit burst=100 nodelay;
        }

        location ~ ^/api/v1/trending/(.*)$ {
          proxy_pass http://user_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          limit_req zone=api_limit burst=200 nodelay;
        }

        location ~ ^/api/v1/discover/(.*)$ {
          proxy_pass http://user_service;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Request-ID $request_id;
          proxy_set_header Connection "";

          proxy_connect_timeout 10s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          limit_req zone=api_limit burst=100 nodelay;
        }

        # ============================================
        # 默认响应 - 404
        # ============================================
        location / {
          return 404 '{"error":"Not Found"}\n';
          add_header Content-Type 'application/json';
        }
      }
    }
