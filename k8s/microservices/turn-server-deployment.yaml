---
# TURN Server Deployment for WebRTC Video Calls
# Handles NAT traversal for peer-to-peer video connections
apiVersion: v1
kind: Namespace
metadata:
  name: nova-turn
  labels:
    app: nova
    component: turn-server

---
# ConfigMap for coturn configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: turn-server-config
  namespace: nova-turn
data:
  turnserver.conf: |
    # Listening ports
    listening-port=3478
    listening-ip=0.0.0.0
    alt-listening-port=3479

    # External IP for clients to connect to
    external-ip=${EXTERNAL_IP}

    # Relay ports
    relay-ip=0.0.0.0
    min-bps=0
    bps-capacity=0

    # Credentials
    realm=${REALM}

    # Authentication
    user=${TURN_USER}:${TURN_PASSWORD}

    # Verbose logging
    log-file=/var/log/turn/turn.log

    # Performance
    max-bps=1000000
    bps-capacity=0

    # Database (optional - for persistent sessions)
    # db=/var/lib/turn/turnserver.db

    # HTTPS/TLS support
    # cert=/etc/turn/cert.pem
    # pkey=/etc/turn/key.pem

---
# Secret for TURN server credentials
apiVersion: v1
kind: Secret
metadata:
  name: turn-server-secret
  namespace: nova-turn
type: Opaque
stringData:
  TURN_USER: "nova"
  TURN_PASSWORD: "changeme-in-production"  # TODO: Change in production
  REALM: "turn.nova.local"
  EXTERNAL_IP: "your-server-ip"  # TODO: Set to your server's public IP

---
# Service for TURN server (UDP for media)
apiVersion: v1
kind: Service
metadata:
  name: turn-server
  namespace: nova-turn
  labels:
    app: nova
    component: turn-server
spec:
  type: LoadBalancer
  ports:
    # TURN/STUN UDP ports
    - name: stun-udp
      port: 3478
      targetPort: 3478
      protocol: UDP
    - name: turn-udp
      port: 3478
      targetPort: 3478
      protocol: UDP
    - name: turn-udp-alt
      port: 3479
      targetPort: 3479
      protocol: UDP
    # TURN TCP ports
    - name: turn-tcp
      port: 3478
      targetPort: 3478
      protocol: TCP
  selector:
    app: nova
    component: turn-server
  externalTrafficPolicy: Local  # Preserve source IP for NAT traversal

---
# Deployment for coturn TURN server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: turn-server
  namespace: nova-turn
  labels:
    app: nova
    component: turn-server
  annotations:
    description: "TURN server for WebRTC NAT traversal"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nova
      component: turn-server
  template:
    metadata:
      labels:
        app: nova
        component: turn-server
    spec:
      containers:
        - name: turn-server
          image: coturn/coturn:latest
          imagePullPolicy: IfNotPresent

          ports:
            # STUN/TURN UDP
            - name: stun-udp
              containerPort: 3478
              protocol: UDP
            # TURN UDP alt port
            - name: turn-udp-alt
              containerPort: 3479
              protocol: UDP
            # TURN TCP
            - name: turn-tcp
              containerPort: 3478
              protocol: TCP

          env:
            - name: EXTERNAL_IP
              valueFrom:
                secretKeyRef:
                  name: turn-server-secret
                  key: EXTERNAL_IP
            - name: TURN_USER
              valueFrom:
                secretKeyRef:
                  name: turn-server-secret
                  key: TURN_USER
            - name: TURN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: turn-server-secret
                  key: TURN_PASSWORD
            - name: REALM
              valueFrom:
                secretKeyRef:
                  name: turn-server-secret
                  key: REALM

          # Resource limits
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
            limits:
              cpu: 2000m
              memory: 1Gi

          # Volume mount for configuration
          volumeMounts:
            - name: config
              mountPath: /etc/coturn
              readOnly: true
            - name: logs
              mountPath: /var/log/turn

          # Health check
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "echo 'STUN' | nc -w 1 localhost 3478 || exit 1"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3

          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              add:
                - NET_BIND_SERVICE

      # Volumes
      volumes:
        - name: config
          configMap:
            name: turn-server-config
        - name: logs
          emptyDir: {}

      # Node affinity for dedicated TURN node (optional)
      # affinity:
      #   nodeAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #       - weight: 100
      #         preference:
      #           matchExpressions:
      #             - key: turn-server
      #               operator: In
      #               values:
      #                 - "true"

---
# HorizontalPodAutoscaler for TURN server (optional)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: turn-server-hpa
  namespace: nova-turn
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: turn-server

  minReplicas: 1
  maxReplicas: 3

  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85

---
# ServiceMonitor for Prometheus (if using Prometheus operator)
# Uncomment if you have Prometheus operator installed
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: turn-server
#   namespace: nova-turn
#   labels:
#     app: nova
#     component: turn-server
# spec:
#   selector:
#     matchLabels:
#       app: nova
#       component: turn-server
#   endpoints:
#     - port: prometheus
#       interval: 30s
