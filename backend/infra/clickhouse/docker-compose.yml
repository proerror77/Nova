version: '3.9'

# ============================================
# ClickHouse + Kafka for Local Development
# ============================================

services:
  # ============================================
  # Zookeeper (Required by Kafka)
  # ============================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: nova-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - nova-analytics
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Kafka (Event Streaming)
  # ============================================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: nova-kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168  # 7 days
      KAFKA_LOG_SEGMENT_BYTES: 1073741824  # 1GB
      KAFKA_MESSAGE_MAX_BYTES: 10485760  # 10MB
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - nova-analytics
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  # ============================================
  # ClickHouse Server
  # ============================================
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: nova-clickhouse
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-nova_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native protocol
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./config.xml:/etc/clickhouse-server/config.d/custom.xml:ro
      - ./users.xml:/etc/clickhouse-server/users.d/custom.xml:ro
    networks:
      - nova-analytics
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Kafka UI (Optional - for development)
  # ============================================
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: nova-kafka-ui
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: nova-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8081:8080"
    networks:
      - nova-analytics

  # ============================================
  # ClickHouse Client (Optional - for debugging)
  # ============================================
  clickhouse-client:
    image: clickhouse/clickhouse-client:23.8-alpine
    container_name: nova-clickhouse-client
    depends_on:
      clickhouse:
        condition: service_healthy
    command: >
      clickhouse-client
      --host=clickhouse
      --port=9000
      --user=${CLICKHOUSE_USER:-default}
      --password=${CLICKHOUSE_PASSWORD:-}
    networks:
      - nova-analytics
    profiles:
      - debug  # Only start with: docker-compose --profile debug up

# ============================================
# Volumes
# ============================================
volumes:
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local
  kafka_data:
    driver: local
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local

# ============================================
# Networks
# ============================================
networks:
  nova-analytics:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
