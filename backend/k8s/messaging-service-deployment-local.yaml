---
# Local Development Deployment for Messaging Service
# ⚠️  NOT for production use!
# Changes from production deployment:
# - 1 replica instead of 3
# - No init container (skip migrations in dev)
# - Lower resource requests/limits
# - ImagePullPolicy: Never (use local images)
# - Simpler health check
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-service
  namespace: nova-messaging
  labels:
    app: nova
    component: messaging-service
    version: v1
    environment: development
  annotations:
    description: "Local development deployment - single replica, local image"
spec:
  replicas: 1
  strategy:
    type: Recreate  # Local dev: simple recreation instead of rolling update
  selector:
    matchLabels:
      app: nova
      component: messaging-service
  template:
    metadata:
      labels:
        app: nova
        component: messaging-service
        version: v1
        environment: development
    spec:
      # Pod Security Context
      securityContext:
        runAsNonRoot: false  # Allow root in dev for debugging
        runAsUser: 1001
        fsGroup: 1001

      # Service Account
      serviceAccountName: messaging-service

      # Application Container
      containers:
        - name: messaging-service
          # Use local image - must be built first
          image: nova/messaging-service:latest
          imagePullPolicy: Never  # Critical: use local images only

          # Port Configuration
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          # Environment Variables
          env:
            # ConfigMap-based config
            - name: APP_ENV
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: APP_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: PORT
            - name: RUST_LOG
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: RUST_LOG
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: HOST

            # Database (from Secret)
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: messaging-service-secret
                  key: DATABASE_URL
            - name: DATABASE_MAX_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: DATABASE_MAX_CONNECTIONS

            # Redis (from Secret)
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: messaging-service-secret
                  key: REDIS_URL
            - name: REDIS_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: REDIS_POOL_SIZE

            # Kafka
            - name: KAFKA_BROKERS
              valueFrom:
                secretKeyRef:
                  name: messaging-service-secret
                  key: KAFKA_BROKERS

            # JWT
            - name: JWT_PUBLIC_KEY_PEM
              valueFrom:
                secretKeyRef:
                  name: messaging-service-secret
                  key: JWT_PUBLIC_KEY_PEM

            # Encryption
            - name: SECRETBOX_KEY_B64
              valueFrom:
                secretKeyRef:
                  name: messaging-service-secret
                  key: SECRETBOX_KEY_B64

            # Video Call Settings
            - name: VIDEO_CALL_MAX_DURATION_HOURS
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: VIDEO_CALL_MAX_DURATION_HOURS
            - name: VIDEO_CALL_IDLE_TIMEOUT_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: VIDEO_CALL_IDLE_TIMEOUT_MINUTES

            # WebSocket Settings
            - name: WS_DEV_ALLOW_ALL
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: WS_DEV_ALLOW_ALL
            - name: WS_MAX_FRAME_SIZE
              valueFrom:
                configMapKeyRef:
                  name: messaging-service-config
                  key: WS_MAX_FRAME_SIZE

          # Resource Requests and Limits (minimal for local dev)
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi

          # Health Checks (simplified for local dev)
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          # Security Context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false  # Allow write in dev for logs
            capabilities:
              drop:
                - ALL

          # Volume Mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp

      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}

      # Termination Grace Period
      terminationGracePeriodSeconds: 10

      # DNS Policy
      dnsPolicy: ClusterFirst
