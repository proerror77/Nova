# ============================================================================
# Microservices Mock Deployments - LOCAL TESTING ONLY
# ============================================================================
# 此文件用於本地開發測試，使用 busybox/nginx 作為占位符
# 驗證 K8s 配置、網絡、存儲和服務發現是否正常工作
#
# 實際部署時，應該使用 microservices-deployments.yaml 的完整應用鏡像
# ============================================================================

---
apiVersion: v1
kind: Namespace
metadata:
  name: nova-services
  labels:
    name: nova-services
    phase: application

---
# ConfigMap for shared configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: services-config
  namespace: nova-services
data:
  # 跨服務通信超時配置
  http-client-timeout-ms: "3000"
  http-client-read-timeout-ms: "3000"
  http-client-write-timeout-ms: "3000"
  http-client-connect-timeout-ms: "1000"

  # 連接池配置
  http-client-pool-size: "50"
  http-client-queue-size: "1000"

  # 熔斷器配置
  circuit-breaker-failure-threshold: "50"
  circuit-breaker-success-threshold: "5"
  circuit-breaker-timeout-sec: "60"
  circuit-breaker-enabled: "true"

  # 重試配置
  http-client-max-retries: "3"
  http-client-retry-delay-ms: "100"

  # 數據庫連接池
  database-pool-size: "20"
  database-idle-timeout-sec: "30"
  database-max-lifetime-sec: "1800"

  # Redis 連接池
  redis-pool-size: "20"
  redis-connection-timeout-ms: "2000"

---
# Mock UserService Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: nova-services
  labels:
    app: user-service
    component: social
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  selector:
    matchLabels:
      app: user-service

  template:
    metadata:
      labels:
        app: user-service

    spec:
      containers:
        - name: user-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 80
              protocol: TCP

          env:
            - name: APP_ENV
              value: "local-testing"

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run

      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}

      terminationGracePeriodSeconds: 10

---
# Mock AuthService Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: nova-services
  labels:
    app: auth-service
    component: identity
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: auth-service

  template:
    metadata:
      labels:
        app: auth-service

    spec:
      containers:
        - name: auth-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 80

          env:
            - name: APP_ENV
              value: "local-testing"

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run

      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}

      terminationGracePeriodSeconds: 10

---
# Mock SearchService Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: nova-services
  labels:
    app: search-service
    component: discovery
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: search-service

  template:
    metadata:
      labels:
        app: search-service

    spec:
      containers:
        - name: search-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 80

          env:
            - name: APP_ENV
              value: "local-testing"

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run

      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}

      terminationGracePeriodSeconds: 10

---
# Mock StreamingAPI Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-api
  namespace: nova-services
  labels:
    app: streaming-api
    component: streaming
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: streaming-api

  template:
    metadata:
      labels:
        app: streaming-api

    spec:
      containers:
        - name: streaming-api
          image: nginx:alpine
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 80

          env:
            - name: APP_ENV
              value: "local-testing"

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run

      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}

      terminationGracePeriodSeconds: 10

---
# Mock Messaging Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-service
  namespace: nova-services
  labels:
    app: messaging-service
    component: messaging
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: messaging-service

  template:
    metadata:
      labels:
        app: messaging-service

    spec:
      containers:
        - name: messaging-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 80

          env:
            - name: APP_ENV
              value: "local-testing"

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run

      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}

      terminationGracePeriodSeconds: 10

---
# Services (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: nova-services
  labels:
    app: user-service
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 80
      name: http
  selector:
    app: user-service

---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: nova-services
  labels:
    app: auth-service
spec:
  type: ClusterIP
  ports:
    - port: 8084
      targetPort: 80
      name: http
  selector:
    app: auth-service

---
apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: nova-services
  labels:
    app: search-service
spec:
  type: ClusterIP
  ports:
    - port: 8086
      targetPort: 80
      name: http
  selector:
    app: search-service

---
apiVersion: v1
kind: Service
metadata:
  name: streaming-api
  namespace: nova-services
  labels:
    app: streaming-api
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 80
      name: http
  selector:
    app: streaming-api

---
apiVersion: v1
kind: Service
metadata:
  name: messaging-service
  namespace: nova-services
  labels:
    app: messaging-service
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 80
      name: http
  selector:
    app: messaging-service
