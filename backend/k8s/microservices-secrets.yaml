# ============================================================================
# Kubernetes Secrets - 敏感數據配置
# ============================================================================
# 警告：這個文件包含敏感信息
# 生產環境中不應該提交到版本控制！
# 使用 Sealed Secrets 或 External Secrets 管理
# ============================================================================

---
apiVersion: v1
kind: Namespace
metadata:
  name: nova-secrets
  labels:
    name: nova-secrets

---
# UserService Secret
apiVersion: v1
kind: Secret
metadata:
  name: user-service-secret
  namespace: nova-services
type: Opaque
stringData:
  # PostgreSQL 連接字符串 (nova_core 數據庫)
  database-url: "postgresql://app_user:app_password_change_me@postgres-primary.nova-database.svc.cluster.local:5432/nova_core"

  # Redis 連接字符串 (使用 Sentinel)
  redis-url: "redis://:redis_password_change_me@redis-sentinel.nova-redis.svc.cluster.local:6379/0"

  # Kafka
  kafka-brokers: "kafka-0.kafka.nova-infra.svc.cluster.local:9092,kafka-1.kafka.nova-infra.svc.cluster.local:9092,kafka-2.kafka.nova-infra.svc.cluster.local:9092"

  # ClickHouse
  clickhouse-url: "http://clickhouse.nova-infra.svc.cluster.local:8123"

  # Neo4j
  neo4j-url: "bolt://neo4j.nova-infra.svc.cluster.local:7687"
  neo4j-user: "neo4j"
  neo4j-password: "neo4j_password_change_me"

---
# AuthService Secret
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: nova-services
type: Opaque
stringData:
  # PostgreSQL 連接字符串 (nova_core 數據庫 - 與 user-service 共享)
  database-url: "postgresql://app_user:app_password_change_me@postgres-primary.nova-database.svc.cluster.local:5432/nova_core"

  # JWT 密鑰 (TODO: 生成實際密鑰)
  jwt-secret: "jwt_secret_key_change_me_32_bytes_long_minimum"

  # JWT 公鑰 (用於驗證)
  jwt-public-key: "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...\n-----END PUBLIC KEY-----"

---
# SearchService Secret
apiVersion: v1
kind: Secret
metadata:
  name: search-service-secret
  namespace: nova-services
type: Opaque
stringData:
  # PostgreSQL 連接字符串 (nova_core 數據庫 - 搜索索引元數據)
  database-url: "postgresql://app_user:app_password_change_me@postgres-primary.nova-database.svc.cluster.local:5432/nova_core"

  # Elasticsearch/OpenSearch
  elasticsearch-url: "http://elasticsearch.nova-infra.svc.cluster.local:9200"
  elasticsearch-user: "elastic"
  elasticsearch-password: "elastic_password_change_me"

  # Milvus (向量數據庫)
  milvus-url: "milvus.nova-infra.svc.cluster.local:19530"

---
# MessagingService Secret (覆蓋現有配置)
apiVersion: v1
kind: Secret
metadata:
  name: messaging-service-secret
  namespace: nova-services
type: Opaque
stringData:
  # PostgreSQL 連接字符串 (專用 nova_messaging 數據庫)
  database-url: "postgresql://app_user:app_password_change_me@postgres-primary.nova-database.svc.cluster.local:5432/nova_messaging"

  # Redis (使用 Sentinel，DB index 1)
  redis-url: "redis://:redis_password_change_me@redis-sentinel.nova-redis.svc.cluster.local:6379/1"

  # Kafka
  kafka-brokers: "kafka-0.kafka.nova-infra.svc.cluster.local:9092,kafka-1.kafka.nova-infra.svc.cluster.local:9092,kafka-2.kafka.nova-infra.svc.cluster.local:9092"

  # JWT 公鑰 (驗證令牌)
  jwt-public-key: "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...\n-----END PUBLIC KEY-----"

  # APNs 推送通知
  apns-certificate: "base64_encoded_apns_certificate_here"
  apns-certificate-password: "apns_cert_password"
  apns-bundle-id: "com.nova.app"

  # TURN 服務器配置
  turn-username: "novauser"
  turn-password: "nova-pass-change-me"

---
# StreamingAPI Secret
apiVersion: v1
kind: Secret
metadata:
  name: streaming-api-secret
  namespace: nova-services
type: Opaque
stringData:
  # PostgreSQL 連接字符串 (nova_core 數據庫)
  database-url: "postgresql://app_user:app_password_change_me@postgres-primary.nova-database.svc.cluster.local:5432/nova_core"

  # Redis (DB index 3)
  redis-url: "redis://:redis_password_change_me@redis-sentinel.nova-redis.svc.cluster.local:6379/3"

  # Kafka
  kafka-brokers: "kafka-0.kafka.nova-infra.svc.cluster.local:9092,kafka-1.kafka.nova-infra.svc.cluster.local:9092,kafka-2.kafka.nova-infra.svc.cluster.local:9092"

---
# Ingress TLS Certificate (可選)
apiVersion: v1
kind: Secret
metadata:
  name: nova-tls-cert
  namespace: nova-services
type: kubernetes.io/tls
data:
  # 使用 certbot 或 OpenSSL 生成：
  # openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365
  # base64 -i cert.pem | tr -d '\n' > cert.b64
  # base64 -i key.pem | tr -d '\n' > key.b64
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="

---
# Docker Registry Secret (如果使用私有鏡像倉庫)
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: nova-services
type: kubernetes.io/dockercfg
stringData:
  .dockercfg: |
    {
      "registry.example.com": {
        "username": "docker-username",
        "password": "docker-password",
        "email": "docker-email@example.com",
        "auth": "base64-encoded-credentials"
      }
    }
